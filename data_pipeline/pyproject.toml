[tool.poetry]
name = "bcr-data-pipeline"
version = "0.1.0"
description = "ETL subproject to ingest datasources, process and load clear cuts data model into the main DB"
authors = ["DataForGood"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"
boto3 = "^1.37.12"
dask-geopandas = "^0.4.3"
fiona = "^1.10.1"
geoalchemy2 = "^0.17.1"
geopandas = "^1.0.1"
jinja2 = "^3.1.6"
numpy = "^2.2.3"
pandas = "^2.2.3"
prefect = { version = "3.2.12", extras = ["base"] }
psutil = "^7.0.0"
psycopg2 = "^2.9.10"
py7zr = "^0.22.0"
pyarrow = "^19.0.1"
pykeepass = "^4.1.1.post1"
python-dotenv = "^1.1.0"
pyyaml = "^6.0.2"
rasterio = "^1.4.3"
requests = "^2.32.3"
shapely = "^2.1.0"
sqlalchemy = "^2.0.40"
tqdm = "^4.67.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pytest = "^7.2.0"
httpx = "^0.28.1"
moto = "^5.1.1"
mypy = "^1.15.0"
types-psutil = "^7.0.0.20250218"
types-requests = "^2.32.0.20250328"
pandas-stubs = "^2.2.3.250308"
types-tqdm = "^4.67.0.20250319"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = [
    "geopandas.*",
    "rasterio.*",
    "osgeo.*",
    "pykeepass.*",
    "dask_geopandas.*",
]
ignore_missing_imports = true

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.

# Allow fix for all enabled rules (when `--fix`) is provided.
[tool.pylint.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["C", "W"]
ignore = ["E501", "migrations"]
select = ["E4", "E7", "E9", "F", "B"]
unfixable = ["R"]
mccabe = 10

# See https://docs.astral.sh/ruff/settings
[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
# Enable isort and flake8-bugbear on top of the defaults
extend-select = ["I", "B"]

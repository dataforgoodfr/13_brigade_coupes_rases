[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "bcr-backend"
version = "0.1.0"
authors = ["DataForGood"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pytest = "^7.2.0"
httpx = "^0.28.1"
ipykernel = "^6.29.5"

[tool.poetry.group.backend.dependencies]
python = "^3.13"
fastapi = "^0.115.8"
sqlalchemy = "^2.0.38"
psycopg2-binary = "^2.9.10"
pydantic-settings = "^2.7.1"
uvicorn = "^0.34.0"
geoalchemy2 = "^0.17.1"
alembic = "^1.14.1"
pydantic = {extras = ["email"], version = "^2.7.1"}
shapely = "^2.0.7"
pyjwt = "^2.10.1"
bcrypt = "^4.3.0"
python-multipart = "^0.0.20"
geojson-pydantic = "^1.2.0"

[tool.poetry.scripts]
docker-start = "docker compose up -d --build"
docker-stop = "docker compose down"

# Go to https://docs.astral.sh/ruff/settings for more information
[tool.ruff]
# Same as Black.
line-length = 96
target-version = "py313"

[tool.ruff.lint]
mccabe.max-complexity = 7

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "B"]
ignore = ["E501"]

[tool.ruff.format]
# Automatically detect the appropriate line ending.
line-ending = "auto"

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.pytest.ini_options]
markers = [
    "focus: run only these tests"
]

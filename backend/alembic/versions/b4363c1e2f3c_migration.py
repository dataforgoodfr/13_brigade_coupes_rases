"""migration

Revision ID: b4363c1e2f3c
Revises: 66add23d112a
Create Date: 2025-07-31 20:09:08.544735

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b4363c1e2f3c"
down_revision: str | None = "66add23d112a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "clear_cut_report_forms", sa.Column("forest", sa.String(), nullable=True)
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("has_remaining_trees", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms", sa.Column("trees_species", sa.String(), nullable=True)
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("has_construction_panel", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("construction_panel_images", sa.JSON(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms", sa.Column("wetland", sa.String(), nullable=True)
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("destruction_clues", sa.String(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("clear_cut_images", sa.JSON(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("tree_trunks_images", sa.JSON(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("soil_state_images", sa.JSON(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("access_road_images", sa.JSON(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("has_other_ecological_zone", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("other_ecological_zone_type", sa.String(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("has_nearby_ecological_zone", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("nearby_ecological_zone_type", sa.String(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("has_ddt_request", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms", sa.Column("company", sa.String(), nullable=True)
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("is_pefc_fsc_certified", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("is_over_20_ha", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("is_psg_required_plot", sa.Boolean(), nullable=True),
    )
    op.drop_index(
        "ix_clear_cut_report_forms_forest_description",
        table_name="clear_cut_report_forms",
    )
    op.drop_index(
        "ix_clear_cut_report_forms_species", table_name="clear_cut_report_forms"
    )
    op.create_index(
        op.f("ix_clear_cut_report_forms_forest"),
        "clear_cut_report_forms",
        ["forest"],
        unique=False,
    )
    op.create_index(
        op.f("ix_clear_cut_report_forms_trees_species"),
        "clear_cut_report_forms",
        ["trees_species"],
        unique=False,
    )
    op.drop_column("clear_cut_report_forms", "pefc_fsc_certified")
    op.drop_column("clear_cut_report_forms", "waterzone_description")
    op.drop_column("clear_cut_report_forms", "protected_zone_description")
    op.drop_column("clear_cut_report_forms", "ecological_zone")
    op.drop_column("clear_cut_report_forms", "images_soil_state")
    op.drop_column("clear_cut_report_forms", "ecological_zone_type")
    op.drop_column("clear_cut_report_forms", "images_tree_trunks")
    op.drop_column("clear_cut_report_forms", "ddt_request")
    op.drop_column("clear_cut_report_forms", "image_worksite_sign")
    op.drop_column("clear_cut_report_forms", "species")
    op.drop_column("clear_cut_report_forms", "compagny")
    op.drop_column("clear_cut_report_forms", "nearby_zone")
    op.drop_column("clear_cut_report_forms", "nearby_zone_type")
    op.drop_column("clear_cut_report_forms", "forest_description")
    op.drop_column("clear_cut_report_forms", "remainingTrees")
    op.drop_column("clear_cut_report_forms", "images_clear_cut")
    op.drop_column("clear_cut_report_forms", "images_access_road")
    op.drop_column("clear_cut_report_forms", "psg_required_plot")
    op.drop_column("clear_cut_report_forms", "workSignVisible")
    op.drop_column("clear_cut_report_forms", "over_20_ha")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("over_20_ha", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("workSignVisible", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "psg_required_plot", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "images_access_road",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "images_clear_cut",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("remainingTrees", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "forest_description", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("nearby_zone_type", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("nearby_zone", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("compagny", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("species", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "image_worksite_sign",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("ddt_request", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "images_tree_trunks",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "ecological_zone_type", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "images_soil_state",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column("ecological_zone", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "protected_zone_description",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "waterzone_description", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "clear_cut_report_forms",
        sa.Column(
            "pefc_fsc_certified", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.drop_index(
        op.f("ix_clear_cut_report_forms_trees_species"),
        table_name="clear_cut_report_forms",
    )
    op.drop_index(
        op.f("ix_clear_cut_report_forms_forest"), table_name="clear_cut_report_forms"
    )
    op.create_index(
        "ix_clear_cut_report_forms_species",
        "clear_cut_report_forms",
        ["species"],
        unique=False,
    )
    op.create_index(
        "ix_clear_cut_report_forms_forest_description",
        "clear_cut_report_forms",
        ["forest_description"],
        unique=False,
    )
    op.drop_column("clear_cut_report_forms", "is_psg_required_plot")
    op.drop_column("clear_cut_report_forms", "is_over_20_ha")
    op.drop_column("clear_cut_report_forms", "is_pefc_fsc_certified")
    op.drop_column("clear_cut_report_forms", "company")
    op.drop_column("clear_cut_report_forms", "has_ddt_request")
    op.drop_column("clear_cut_report_forms", "nearby_ecological_zone_type")
    op.drop_column("clear_cut_report_forms", "has_nearby_ecological_zone")
    op.drop_column("clear_cut_report_forms", "other_ecological_zone_type")
    op.drop_column("clear_cut_report_forms", "has_other_ecological_zone")
    op.drop_column("clear_cut_report_forms", "access_road_images")
    op.drop_column("clear_cut_report_forms", "soil_state_images")
    op.drop_column("clear_cut_report_forms", "tree_trunks_images")
    op.drop_column("clear_cut_report_forms", "clear_cut_images")
    op.drop_column("clear_cut_report_forms", "destruction_clues")
    op.drop_column("clear_cut_report_forms", "wetland")
    op.drop_column("clear_cut_report_forms", "construction_panel_images")
    op.drop_column("clear_cut_report_forms", "has_construction_panel")
    op.drop_column("clear_cut_report_forms", "trees_species")
    op.drop_column("clear_cut_report_forms", "has_remaining_trees")
    op.drop_column("clear_cut_report_forms", "forest")
    # ### end Alembic commands ###

"""migration

Revision ID: 4ae4ff0f990a
Revises:
Create Date: 2025-02-24 13:21:38.320191

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = "4ae4ff0f990a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Manually run this so that we start off with postgis enabled. It is installed with the docker image,
    # but must be enabled manually for each database.
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "departments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_departments_code"), "departments", ["code"], unique=False)
    op.create_index(op.f("ix_departments_id"), "departments", ["id"], unique=False)
    op.create_table(
        "items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_items_id"), "items", ["id"], unique=False)
    op.create_index(op.f("ix_items_name"), "items", ["name"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("firstname", sa.String(), nullable=True),
        sa.Column("lastname", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_firstname"), "users", ["firstname"], unique=False)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_lastname"), "users", ["lastname"], unique=False)
    op.create_index(op.f("ix_users_role"), "users", ["role"], unique=False)
    op.create_table(
        "clear_cuts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("cut_date", sa.DateTime(), nullable=True),
        sa.Column("slope_percentage", sa.Float(), nullable=True),
        sa.Column(
            "location",
            geoalchemy2.types.Geometry(
                geometry_type="POINT", from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column(
            "boundary",
            geoalchemy2.types.Geometry(
                geometry_type="POLYGON", from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("department_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_index(op.f("ix_clear_cuts_cut_date"), "clear_cuts", ["cut_date"], unique=False)
    op.create_index(
        op.f("ix_clear_cuts_department_id"), "clear_cuts", ["department_id"], unique=False
    )
    op.create_index(op.f("ix_clear_cuts_id"), "clear_cuts", ["id"], unique=False)
    op.create_index(
        op.f("ix_clear_cuts_slope_percentage"), "clear_cuts", ["slope_percentage"], unique=False
    )
    op.create_index(op.f("ix_clear_cuts_status"), "clear_cuts", ["status"], unique=False)
    op.create_index(op.f("ix_clear_cuts_user_id"), "clear_cuts", ["user_id"], unique=False)
    op.create_table(
        "user_department",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "department_id"),
    )
    op.create_table(
        "user_clear_cut",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("clear_cut_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["clear_cut_id"],
            ["clear_cuts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "clear_cut_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table("user_clear_cut")
    op.drop_table("user_department")
    op.drop_index(op.f("ix_clear_cuts_user_id"), table_name="clear_cuts")
    op.drop_index(op.f("ix_clear_cuts_status"), table_name="clear_cuts")
    op.drop_index(op.f("ix_clear_cuts_slope_percentage"), table_name="clear_cuts")
    op.drop_index(op.f("ix_clear_cuts_id"), table_name="clear_cuts")
    op.drop_index(op.f("ix_clear_cuts_department_id"), table_name="clear_cuts")
    op.drop_index(op.f("ix_clear_cuts_cut_date"), table_name="clear_cuts")
    op.drop_table("clear_cuts")
    op.drop_index(op.f("ix_users_role"), table_name="users")
    op.drop_index(op.f("ix_users_lastname"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_firstname"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_items_name"), table_name="items")
    op.drop_index(op.f("ix_items_id"), table_name="items")
    op.drop_table("items")
    op.drop_index(op.f("ix_departments_id"), table_name="departments")
    op.drop_index(op.f("ix_departments_code"), table_name="departments")
    op.drop_table("departments")
    # ### end Alembic commands ###

"""migration

Revision ID: 4c91cfa8d4f2
Revises: 9ba44a77af28
Create Date: 2025-04-04 10:21:40.730956

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4c91cfa8d4f2"
down_revision: Union[str, None] = "9ba44a77af28"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "clear_cut_pictures",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("clear_cut_id", sa.Integer(), nullable=True),
        sa.Column("link", sa.String(), nullable=True),
        sa.Column("tag", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clear_cut_id"],
            ["clear_cuts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_clear_cut_pictures_clear_cut_id"),
        "clear_cut_pictures",
        ["clear_cut_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_clear_cut_pictures_id"), "clear_cut_pictures", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_clear_cut_pictures_tag"), "clear_cut_pictures", ["tag"], unique=False
    )
    op.create_table(
        "clear_cut_reports",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("clear_cut_id", sa.Integer(), nullable=True),
        sa.Column("editor_id", sa.Integer(), nullable=True),
        sa.Column("report_updated_at", sa.DateTime(), nullable=True),
        sa.Column("inspection_date", sa.DateTime(), nullable=True),
        sa.Column("weather", sa.String(), nullable=True),
        sa.Column("forest_description", sa.String(), nullable=True),
        sa.Column("remainingTrees", sa.Boolean(), nullable=True),
        sa.Column("species", sa.String(), nullable=True),
        sa.Column("workSignVisible", sa.Boolean(), nullable=True),
        sa.Column("waterzone_description", sa.String(), nullable=True),
        sa.Column("protected_zone_description", sa.String(), nullable=True),
        sa.Column("soil_state", sa.String(), nullable=True),
        sa.Column("ecological_zone", sa.Boolean(), nullable=True),
        sa.Column("ecological_zone_type", sa.String(), nullable=True),
        sa.Column("nearby_zone", sa.String(), nullable=True),
        sa.Column("nearby_zone_type", sa.String(), nullable=True),
        sa.Column("protected_species", sa.String(), nullable=True),
        sa.Column("protected_habitats", sa.String(), nullable=True),
        sa.Column("ddt_request", sa.Boolean(), nullable=True),
        sa.Column("ddt_request_owner", sa.String(), nullable=True),
        sa.Column("compagny", sa.String(), nullable=True),
        sa.Column("subcontractor", sa.String(), nullable=True),
        sa.Column("landlord", sa.String(), nullable=True),
        sa.Column("pefc_fsc_certified", sa.Boolean(), nullable=True),
        sa.Column("over_20_ha", sa.Boolean(), nullable=True),
        sa.Column("psg_required_plot", sa.Boolean(), nullable=True),
        sa.Column("relevant_for_pefc_complaint", sa.Boolean(), nullable=True),
        sa.Column("relevant_for_rediii_complaint", sa.Boolean(), nullable=True),
        sa.Column("relevant_for_ofb_complaint", sa.Boolean(), nullable=True),
        sa.Column("relevant_for_alert_cnpf_ddt_srgs", sa.Boolean(), nullable=True),
        sa.Column("relevant_for_alert_cnpf_ddt_psg_thresholds", sa.Boolean(), nullable=True),
        sa.Column("relevant_for_psg_request", sa.Boolean(), nullable=True),
        sa.Column("request_engaged", sa.String(), nullable=True),
        sa.Column("other", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clear_cut_id"],
            ["clear_cuts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_clear_cut_reports_clear_cut_id"),
        "clear_cut_reports",
        ["clear_cut_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_clear_cut_reports_editor_id"), "clear_cut_reports", ["editor_id"], unique=False
    )
    op.create_index(
        op.f("ix_clear_cut_reports_forest_description"),
        "clear_cut_reports",
        ["forest_description"],
        unique=False,
    )
    op.create_index(op.f("ix_clear_cut_reports_id"), "clear_cut_reports", ["id"], unique=False)
    op.create_index(
        op.f("ix_clear_cut_reports_species"), "clear_cut_reports", ["species"], unique=False
    )
    op.create_index(
        op.f("ix_clear_cut_reports_weather"), "clear_cut_reports", ["weather"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_clear_cut_reports_weather"), table_name="clear_cut_reports")
    op.drop_index(op.f("ix_clear_cut_reports_species"), table_name="clear_cut_reports")
    op.drop_index(op.f("ix_clear_cut_reports_id"), table_name="clear_cut_reports")
    op.drop_index(
        op.f("ix_clear_cut_reports_forest_description"), table_name="clear_cut_reports"
    )
    op.drop_index(op.f("ix_clear_cut_reports_editor_id"), table_name="clear_cut_reports")
    op.drop_index(op.f("ix_clear_cut_reports_clear_cut_id"), table_name="clear_cut_reports")
    op.drop_table("clear_cut_reports")
    op.drop_index(op.f("ix_clear_cut_pictures_tag"), table_name="clear_cut_pictures")
    op.drop_index(op.f("ix_clear_cut_pictures_id"), table_name="clear_cut_pictures")
    op.drop_index(op.f("ix_clear_cut_pictures_clear_cut_id"), table_name="clear_cut_pictures")
    op.drop_table("clear_cut_pictures")
    # ### end Alembic commands ###

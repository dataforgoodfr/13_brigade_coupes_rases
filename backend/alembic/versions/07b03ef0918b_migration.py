"""migration

Revision ID: 07b03ef0918b
Revises: 8c4afffe03d1
Create Date: 2025-04-19 21:58:35.175698

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "07b03ef0918b"
down_revision: Union[str, None] = "8c4afffe03d1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "clear_cuts", sa.Column("bdf_deciduous_area_hectare", sa.Float(), nullable=True)
    )
    op.drop_column("clear_cuts", "bdf_decidous_area_hectare")
    # ### end Alembic commands ###

    # Manual adjustments for non-automatic migrations
    op.create_check_constraint(
        "ecological_zoning_area_smaller_than_clear_cut_area",
        "clear_cuts",
        "ecological_zoning_area_hectare <= area_hectare + 0.000001",
    )
    op.create_check_constraint(
        "bdf_area_smaller_than_clear_cut_area",
        "clear_cuts",
        """
        COALESCE(bdf_resinous_area_hectare, 0)
        + COALESCE(bdf_deciduous_area_hectare, 0)
        + COALESCE(bdf_mixed_area_hectare, 0)
        + COALESCE(bdf_poplar_area_hectare, 0)
        <= area_hectare + 0.000001
        """,
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "clear_cuts",
        sa.Column(
            "bdf_decidous_area_hectare",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_column("clear_cuts", "bdf_deciduous_area_hectare")
    # ### end Alembic commands ###

    # Manual adjustments for non-automatic migrations
    op.drop_constraint(
        "ecological_zoning_area_smaller_than_clear_cut_area", "clear_cuts"
    )
    op.drop_constraint("bdf_area_smaller_than_clear_cut_area", "clear_cuts")

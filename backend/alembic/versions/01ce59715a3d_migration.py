"""migration

Revision ID: 01ce59715a3d
Revises:
Create Date: 2025-04-03 19:34:43.808546

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = "01ce59715a3d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "departments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_departments_id"), "departments", ["id"], unique=False)
    op.create_table(
        "ecological_zonings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("sub_type", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_ecological_zonings_id"), "ecological_zonings", ["id"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("firstname", sa.String(), nullable=False),
        sa.Column("lastname", sa.String(), nullable=False),
        sa.Column("login", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("login"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "cities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("zip_code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cities_id"), "cities", ["id"], unique=False)
    op.create_index(op.f("ix_cities_zip_code"), "cities", ["zip_code"], unique=False)
    op.create_table(
        "user_department",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "department_id"),
    )
    op.create_table(
        "clear_cuts_reports",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("slope_area_ratio_percentage", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_clear_cuts_reports_id"), "clear_cuts_reports", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_clear_cuts_reports_slope_area_ratio_percentage"),
        "clear_cuts_reports",
        ["slope_area_ratio_percentage"],
        unique=False,
    )
    op.create_table(
        "clear_cuts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("area_hectare", sa.Float(), nullable=False),
        sa.Column(
            "location",
            geoalchemy2.types.Geometry(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "boundary",
            geoalchemy2.types.Geometry(
                geometry_type="MULTIPOLYGON",
                srid=4326,
                from_text="ST_GeomFromEWKT",
                name="geometry",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("observation_start_date", sa.DateTime(), nullable=False),
        sa.Column("observation_end_date", sa.DateTime(), nullable=False),
        sa.Column("report_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["report_id"],
            ["clear_cuts_reports.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_clear_cuts_id"), "clear_cuts", ["id"], unique=False)
    op.create_table(
        "clear_cut_ecological_zoning",
        sa.Column("clear_cut_id", sa.Integer(), nullable=False),
        sa.Column("ecological_zoning_id", sa.Integer(), nullable=False),
        sa.Column("area_hectare", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["clear_cut_id"],
            ["clear_cuts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ecological_zoning_id"],
            ["ecological_zonings.id"],
        ),
        sa.PrimaryKeyConstraint("clear_cut_id", "ecological_zoning_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("clear_cut_ecological_zoning")
    op.drop_index(op.f("ix_clear_cuts_id"), table_name="clear_cuts")
    op.drop_table("clear_cuts")
    op.drop_index(
        op.f("ix_clear_cuts_reports_slope_area_ratio_percentage"),
        table_name="clear_cuts_reports",
    )
    op.drop_index(op.f("ix_clear_cuts_reports_id"), table_name="clear_cuts_reports")
    op.drop_table("clear_cuts_reports")
    op.drop_table("user_department")
    op.drop_index(op.f("ix_cities_zip_code"), table_name="cities")
    op.drop_index(op.f("ix_cities_id"), table_name="cities")
    op.drop_table("cities")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_ecological_zonings_id"), table_name="ecological_zonings")
    op.drop_table("ecological_zonings")
    op.drop_index(op.f("ix_departments_id"), table_name="departments")
    op.drop_table("departments")
    # ### end Alembic commands ###
